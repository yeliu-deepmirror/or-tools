package(default_visibility = ["//visibility:public"])

cc_library(
    name = "base",
    srcs = ["lp_types.cc"],
    hdrs = ["lp_types.h"],
    deps = [
        "//ortools/base",
        "//ortools/base:hash",
        "//ortools/base:strong_vector",
        "//ortools/util:bitset",
        "//ortools/util:strong_integers",
    ],
)

cc_library(
    name = "permutation",
    hdrs = ["permutation.h"],
    copts = ["-fno-fast-math"],
    deps = [
        ":base",
        "//ortools/base",
        "//ortools/util:return_macros",
    ],
)

# Vectors that offer a sparse interface to dense storage.
cc_library(
    name = "scattered_vector",
    hdrs = ["scattered_vector.h"],
    deps = [
        ":base",
        "//ortools/base",
        "//ortools/base:strong_vector",
        "//ortools/util:bitset",
        "//ortools/util:strong_integers",
    ],
)

cc_library(
    name = "sparse_vector",
    hdrs = ["sparse_vector.h"],
    copts = ["-fno-fast-math"],
    deps = [
        ":base",
        ":permutation",
        "//ortools/base",
        "//ortools/graph:iterators",
        "//ortools/util:return_macros",
    ],
)

cc_library(
    name = "sparse_column",
    srcs = ["sparse_column.cc"],
    hdrs = ["sparse_column.h"],
    copts = ["-fno-fast-math"],
    deps = [
        ":base",
        ":sparse_vector",
        "//ortools/base",
    ],
)

cc_library(
    name = "sparse_row",
    hdrs = ["sparse_row.h"],
    copts = ["-fno-fast-math"],
    deps = [
        ":base",
        ":sparse_vector",
        "//ortools/base",
    ],
)

cc_library(
    name = "sparse",
    srcs = ["sparse.cc"],
    hdrs = [
        "sparse.h",
    ],
    copts = ["-fno-fast-math"],
    deps = [
        ":base",
        ":matrix_scaler_hdr",
        ":permutation",
        ":scattered_vector",
        ":sparse_column",
        "//ortools/base",
        "//ortools/base:hash",
        "//ortools/base:strong_vector",
        "//ortools/util:fp_utils",
        "//ortools/util:return_macros",
        "//ortools/util:strong_integers",
    ],
)

cc_library(
    name = "matrix_scaler",
    srcs = ["matrix_scaler.cc"],
    hdrs = ["matrix_scaler.h"],
    copts = ["-fno-fast-math"],
    deps = [
        ":base",
        ":lp_utils",
        ":sparse",
        "//ortools/base",
        "//ortools/base:hash",
        "//ortools/base:strong_vector",
        "//ortools/glop:parameters_cc_proto",
        "//ortools/glop:revised_simplex",
        "//ortools/glop:status",
        "//ortools/util:fp_utils",
    ],
)

cc_library(
    name = "matrix_scaler_hdr",
    hdrs = ["matrix_scaler.h"],
    deps = [
        ":base",
        "//ortools/base",
        "//ortools/base:strong_vector",
    ],
)

cc_library(
    name = "lp_data",
    srcs = ["lp_data.cc"],
    hdrs = ["lp_data.h"],
    copts = ["-fno-fast-math"],
    deps = [
        ":base",
        ":lp_utils",
        ":matrix_utils",
        ":permutation",
        ":sparse",
        "//ortools/base",
        "//ortools/base:hash",
        "//ortools/base:strong_vector",
        "//ortools/glop:parameters_cc_proto",
        "//ortools/util:fp_utils",
        "//ortools/util:strong_integers",
    ],
)

cc_library(
    name = "lp_data_utils",
    srcs = ["lp_data_utils.cc"],
    hdrs = ["lp_data_utils.h"],
    deps = [
        ":base",
        ":lp_data",
        ":matrix_scaler",
        "//ortools/glop:parameters_cc_proto",
    ],
)

cc_library(
    name = "lp_utils",
    srcs = ["lp_utils.cc"],
    hdrs = ["lp_utils.h"],
    copts = ["-fno-fast-math"],
    deps = [
        ":base",
        ":scattered_vector",
        ":sparse_column",
        "//ortools/base",
        "//ortools/base:accurate_sum",
    ],
)

cc_library(
    name = "matrix_utils",
    srcs = ["matrix_utils.cc"],
    hdrs = ["matrix_utils.h"],
    copts = ["-fno-fast-math"],
    deps = [
        ":base",
        ":sparse",
        "//ortools/base",
        "//ortools/base:hash",
    ],
)


cc_library(
    name = "proto_utils",
    srcs = ["proto_utils.cc"],
    hdrs = ["proto_utils.h"],
    copts = ["-fno-fast-math"],
    deps = [
        ":base",
        ":lp_data",
        "//ortools/base",
        "//ortools/linear_solver:linear_solver_cc_proto",
    ],
)
